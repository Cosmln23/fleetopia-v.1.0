"use strict";(self.webpackChunkfleetopia_frontend=self.webpackChunkfleetopia_frontend||[]).push([[845],{"./node_modules/@clerk/nextjs/dist/esm/app-router/client/keyless-creator-reader.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{KeylessCreatorOrReader:()=>KeylessCreatorOrReader});var navigation=__webpack_require__("./node_modules/@storybook/nextjs/dist/export-mocks/navigation/index.mjs"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),export_mocks_headers=__webpack_require__("./node_modules/@storybook/nextjs/dist/export-mocks/headers/index.mjs");const errorThrower=(0,__webpack_require__("./node_modules/@clerk/shared/dist/error.mjs").t5)({packageName:"@clerk/nextjs"});var process=__webpack_require__("./node_modules/process/browser.js");async function keyless_getKeylessCookieName(){const PATH=process.env.PWD;if(!PATH)return"__clerk_keys_0";const lastThreeDirs=PATH.split("/").filter(Boolean).slice(-3).reverse().join("/");return`__clerk_keys_${await async function hashString(str){const data=(new TextEncoder).encode(str),hashBuffer=await crypto.subtle.digest("SHA-256",data);return Array.from(new Uint8Array(hashBuffer)).map(b=>b.toString(16).padStart(2,"0")).join("").slice(0,16)}(lastThreeDirs)}`}var feature_flags=__webpack_require__("./node_modules/@clerk/nextjs/dist/esm/utils/feature-flags.js");const keylessCookieConfig={secure:!1,httpOnly:!1,sameSite:"lax"};async function createOrReadKeylessAction(){if(!feature_flags.h)return null;const result=await __webpack_require__.e(608).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@clerk/nextjs/dist/esm/server/keyless-node.js")).then(m=>m.createOrReadKeyless()).catch(()=>null);if(!result)return errorThrower.throwMissingPublishableKeyError(),null;const{clerkDevelopmentCache,createKeylessModeMessage}=await __webpack_require__.e(553).then(__webpack_require__.bind(__webpack_require__,"./node_modules/@clerk/nextjs/dist/esm/server/keyless-log-cache.js"));null==clerkDevelopmentCache||clerkDevelopmentCache.log({cacheKey:result.publishableKey,msg:createKeylessModeMessage(result)});const{claimUrl,publishableKey,secretKey,apiKeysUrl}=result;return(await(0,export_mocks_headers.cookies)()).set(await keyless_getKeylessCookieName(),JSON.stringify({claimUrl,publishableKey,secretKey}),keylessCookieConfig),{claimUrl,publishableKey,apiKeysUrl}}const KeylessCreatorOrReader=props=>{var _a;const{children}=props,isNotFoundRoute=(null==(_a=(0,navigation.useSelectedLayoutSegments)()[0])?void 0:_a.startsWith("/_not-found"))||!1,[state,fetchKeys]=react.useActionState(createOrReadKeylessAction,null);return(0,react.useEffect)(()=>{isNotFoundRoute||react.startTransition(()=>{fetchKeys()})},[isNotFoundRoute]),react.isValidElement(children)?react.cloneElement(children,{key:null==state?void 0:state.publishableKey,publishableKey:null==state?void 0:state.publishableKey,__internal_keyless_claimKeylessApplicationUrl:null==state?void 0:state.claimUrl,__internal_keyless_copyInstanceKeysUrl:null==state?void 0:state.apiKeysUrl,__internal_bypassMissingPublishableKey:!0}):children}}}]);